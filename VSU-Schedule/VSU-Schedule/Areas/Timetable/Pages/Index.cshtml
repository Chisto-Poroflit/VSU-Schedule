@page
@using System.Globalization
@model VSU_Schedule.Areas.Timetable.Pages.IndexModel
@{
    ViewData["Title"] = "Расписание";
    var rowSpan = Model.Para.Count + 1;
    bool activeSemesterTab = true;
    bool activeSemesterPage = true;
}

@*<script src="https://ajax.googleapis.com/ajax/libs/jquery/2.1.1/jquery.min.js"></script>
<script src="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.jquery.min.js"></script>
<link href="https://cdn.rawgit.com/harvesthq/chosen/gh-pages/chosen.min.css" rel="stylesheet" />*@
<ul class="nav nav-tabs" id="myTab" role="tablist">
    @foreach (var semGroups in Model.Groups.GroupBy(g => g.SemesterNumber))
    {
        var active = activeSemesterTab ? "active" : "";

        <li class="nav-item">
            <a class="nav-link @active" id="@semGroups.Key-tab" data-toggle="tab" href="#sem-@semGroups.Key" role="tab" aria-controls="@semGroups.Key" aria-selected="@activeSemesterTab">@semGroups.Key семестр</a>
        </li>
        activeSemesterTab = false;
    }
</ul>

@*<form action="http://httpbin.org/post" method="post">
    <select data-placeholder="Begin typing a name to filter..." multiple class="chosen-select" name="test">
        <span value =""></span>
        @foreach (var sem in Model.TeacherSubjects.GroupBy(g => g.Subject.Semester))
        {
            @foreach (var ts in sem.OrderBy(g => g.Subject.Name))
            {
                string qwe = $"{@ts.Subject.Name} {@ts.Teacher.FullName}";
                <span class="event teacher" id="@ts.SubjectId@ts.TeacherId" draggable="true">@qwe</span>
            }
        }
    </select>
</form>*@
@foreach (var sem in Model.TeacherSubjects.GroupBy(g => g.Subject.Semester))
    {
        var active = activeSemesterPage ? "show active" : "";
        <div id="sem-@sem.Key" aria-labelledby="@sem.Key-tab">
            @foreach (var ts in sem.OrderBy(g => g.Subject.Name))
            {
                string qwe = $"{@ts.Subject.Name} {@ts.Teacher.FullName}";
                <span class="event teacher" id="@ts.SubjectId@ts.TeacherId" draggable="true">@qwe</span>
            }
        </div>
        activeSemesterTab = false;
    }
<div class="tab-content" id="myTabContent">
    @foreach (var semGroups in Model.Groups.GroupBy(g => g.SemesterNumber))
    {
        var active = activeSemesterPage ? "show active" : "";
        var semNumber = semGroups.Key;
        activeSemesterPage = false;
        <div class="tab-pane fade @active" id="sem-@semGroups.Key" role="tabpanel" aria-labelledby="@semGroups.Key-tab">
            <table class="table table-bordered">
                <thead>
                    <tr>
                        <th scope="col" colspan="2" rowspan="2"></th>
                        @foreach (var group in semGroups.OrderBy(g => g.GroupNumber).GroupBy(g => g.GroupNumber))
                        {
                            var subgroupsCount = group.Count();

                            <th scope="col" colspan="@subgroupsCount" class="text-center">Группа @group.Key</th>
                        }
                    </tr>
                    <tr>

                        @foreach (var group in semGroups.OrderBy(g => g.GroupNumber).ThenBy(g => g.SubgroupNumber))
                        {
                            <th scope="col" class="text-center">@group.SubgroupNumber</th>
                        }
                    </tr>
                </thead>
                <tbody>

                    @for (int day = 1; day <= 6; day++)
                    {
                        <tr>
                            <td rowspan="@rowSpan">@CultureInfo.CurrentCulture.DateTimeFormat.DayNames[day]</td>
                        </tr>
                        @foreach (var para in Model.Para)
                        {
                <tr>
                    <td>@para.StartTime - @para.EndTime</td>
                    @foreach (var group in semGroups)
                    {
                        if (@Model.Couples.Any(g => g.ParaId == para.Number && g.Day == day &&
                                                     g.CoupleGroups.Any(s => s.CoupleId == g.Id && s.GroupId == group.Id)))
                        {
                            var couple = @Model.Couples.Where(g => g.ParaId == para.Number && g.Day == day &&
                                                        g.CoupleGroups.Any(s => s.CoupleId == g.Id && s.GroupId == group.Id)).ToList();
                            var str = $"{@couple.Select(g => g.Subject.Name)} {@couple.Select(g => g.Teacher.FullName)} {@couple.Select(g => g.RoomId)}";
                            <td dropzone="copy" data-max="2">@str</td>
                        }
                        else
                        {
                            <td dropzone="copy" data-max="2"></td>
                        }
                    }
                </tr>
                        }
                    }
                </tbody>
            </table>
            <table class="table">
                <tbody>
                </tbody>
            </table>
        </div>
    }
</div>
<script type="text/javascript">
    //$(document).ready(function () {
    //    $('table td'), function () {
    //        $(this).typeTeacher = true;
    //        $(this).typeRoom = true;
    //    }
        $('.event').on("dragstart", function (event) {
            var dt = event.originalEvent.dataTransfer;
            dt.setData('Text', $(this).attr('id'));
        });
        $('table td').on("dragenter dragover drop", function (event) {
            if ($(this).children().length == $(this).data('max')) {
                return false;
            }
            //if (!$(this).typeTeacher) {
            //    return false;
            //}
            //if (!$(this).typeTeacher && !$(this).typeRoom) {
            //    return false;
            //}
            event.preventDefault();
            if (event.type === 'drop') {
                var data = event.originalEvent.dataTransfer.getData('Text', $(this).attr('id'));
                var type = event.originalEvent.dataTransfer.getData('class', $(this).attr('id'))
                de = $('#' + data).detach();
                //if (type == "event teacher") {
                //    $(this).typeTeacher = false;
                //}
                de.appendTo($(this));
            };
        });
    })
</script>

@*<script type="text/javascript">
    $(".chosen-select").chosen({
        no_results_text: "Oops, nothing found!"
    })
</script>*@